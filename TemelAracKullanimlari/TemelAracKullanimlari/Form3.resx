<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        XgzWKUr0KUpQKUpQKUpQKUpQe9KUr7Rv/9k=
</value>
  </data>
</root>